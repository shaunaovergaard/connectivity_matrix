

########  
##  In the below we are trying to get as many processed scans as possible
##  Detached.ADNI_596 is a table that has already been screened for APOE4 status availability, as well as availability of 3T scans
##
#########################################################################
##  The following packages are required:
library(ggplot2)



#######################################################################

dbDisconnect(con) # close connections prior to establishing new connection
con<-dbConnect(RMySQL::MySQL(), host="localhost", dbname="Detached", user="root", password="fillinwpwd") ##Establishes connection to local instance of MySQL DB
dbListTables(con) # lists tables within the "Detached" db. 

### this fetches- dim(d3) = 1395 468
rs1<-dbSendQuery(con, "SELECT * FROM Detached.ADNI_596 as a, MR_Image_Analysis.UCSFFSL51ALL_08_01_16 as b
                 WHERE a.RID = b.RID")
dbGetStatement(rs1)
dbHasCompleted(rs1)
d3<-dbFetch(rs1, n=50000) ##MySQL(max.con = 16, fetch.default.rec = 500)
dbHasCompleted(rs1)
dim(d3)

###

colnames(d3)
d4<-d3 #just renaming so that we don't overwrite original file
d4 <- d4[,-1] #had to remove rownames
colnames(d4)
d4 <- d4[,-103] #had to remove rownames
colnames(d4)
dbWriteTable(con,"ADNI_596_all", d4)

###
##  Create a dataset that is ordered by RID
d4 <- d4[order(d4$RID),]
##  Unlist and create a new column that ranks EXAMDATE chronologially within each RID group
d4$Order.by.group <- unlist(with(d4, tapply(EXAMDATE.1, RID, function(x) rank(x,ties.method= "first"))))

colnames(d4)
table(d4$RID,d4$Order.by.group)
#####
dbWriteTable(con, "ADNI_596_ALL_ranked_examdate", d4)
dbListTables(con)

#####
##  Select only the cases that = number 1 within the new d3$Order.by.group - these will be the first/baseline scans.

d5 <- d4[which(d4$Order.by.group=='1'),]
dim(d5) #306 x 467

write.csv(d5, '/Users/shaunaovergaard/.......etc)

#######
###################################################################################
###############  Re-run some descriptive statistics on the subset (d5) #############
####################################################################################

colnames(d5)
chixDX_blAPOE<-chisq.test(d5$DXStat_bl, d5$APOE4Cat) #Chi-squared test to determine differences bw categories
chixDX_blAPOE
table(d5$DXStat_bl, d5$APOE4Cat)
plot(table(d5$DXStat_bl, d5$APOE4Cat))


############################################################################
########## Consider Hippocampal volume comparison across groups ###########
############################################################################

##  DX_bl (AD, CN, EMCI, LMCI) Evaluation
# Boxplot - DX_bl (original breakdown, minus SMCI. This is AD, CN, EMCI, and LMCI)
qplot(DX_bl, Hippocampus.bl, data=d5, geom="boxplot")


################################
###### Baseline Diagnosis ######
################################

### In the below, DX_bl refers to four baseline diagnostic categories (AD, CN, EMCI, LMCI)

table(d5$DX_bl)

#help(aov)
d5.hip.aov.dxbl <- aov(Hippocampus.bl ~ DX_bl + AGE + PTGENDER + ICV, d5)
summary(d5.hip.aov.dxbl)
coefficients(d5.hip.aov.dxbl)
#fit<-aov(d5$Hippocampus.bl ~ d5$DX_bl)
#plot(fit)

#help(lm)
d5.hip.lm.dxbl <- lm(Hippocampus.bl ~ DX_bl + AGE + PTGENDER + ICV, d5)
summary(d5.hip.lm.dxbl)
coefficients(d5.hip.lm.dxbl)
fit<-aov(d5$Hippocampus.bl ~ d5$DX_bl)
plot(fit)


### In the below, DXStat refers to the categorization of baseline diagnosis into one of 2 categories (Patient(AD), Control(CN, EMCI, LMCI)).

table(d5$DXStat_bl)
##  DXStat_bl (AD vs CN, where CN corresponds to CN, EMCI, LMCI) Evaluation
# Boxplot - DXStat_bl (AD vs. CN)
qplot(DXStat_bl, Hippocampus.bl, data=d5, geom="boxplot")
t.test(d5$Hippocampus.bl~d5$DXStat_bl)
# aov
d5.hip.aov.dxstatbl <- aov(Hippocampus.bl ~ DXStat_bl + AGE + PTGENDER + ICV, d5)
summary(d5.hip.aov.dxstatbl)
coefficients(d5.hip.aov.dxbl)
#fit<-aov(d5$Hippocampus.bl ~ d5$DX_bl)
#plot(fit)

###
# lm
d5.hip.lm.dxstatbl <- lm(Hippocampus.bl ~ DXStat_bl + AGE + PTGENDER + ICV, d5)
summary(d5.hip.lm.dxstatbl)
coefficients(d5.hip.lm.dxbl)
#fit<-aov(d5$Hippocampus.bl ~ d5$DX_bl)
#plot(fit)

####################################################
########## Consider Ventrilcle volume comparison across groups ###########
##  DX_bl (AD, CN, EMCI, LMCI) Evaluation
# Boxplot - DX_bl (original breakdown, minus SMCI. This is AD, CN, EMCI, and LMCI)
qplot(DX_bl, Ventricles.bl, data=d5, geom="boxplot")
# aov
d5.vent.aov.dxbl <- aov(Ventricles.bl ~ DX_bl + AGE + factor(PTGENDER) + ICV, d5)
summary(d5.vent.aov.dxbl)
coefficients(d5.vent.aov.dxbl)
#fit<-aov(d5$Ventricles.bl ~ d5$DX_bl)
#plot(fit)

##  DXStat_bl (AD vs CN, where CN corresponds to CN, EMCI, LMCI) Evaluation
# Boxplot - DXStat_bl (AD vs. CN)
qplot(DXStat_bl, Ventricles.bl, data=d5, geom="boxplot")
t.test(d5$Ventricles.bl~d5$DXStat_bl)
# lm
d5.vent.lm.dxstatbl <- lm(Ventricles.bl ~ DX_bl + AGE + factor(PTGENDER) + ICV, d5)
summary(d5.vent.lm.dxstatbl)
coefficients(d5.vent.lm.dxbl)
#fit<-lm(d5$Ventricles.bl ~ d5$DX_bl)
#plot(fit)

##########################################################################################################################################
##########################################################################################################################################
####################### Form subgroups in order to run group comparisons of structural covariance of Default Mode Network ################
############################################################################################################################################

##################################################################
######### Create subgroup of AD vs. Patient #####################

table(d5$DXStat_bl) #visualize AD vs. Patient grouping

d5CN <- d5[which(d5$DXStat_bl=='CN'),]
d5AD <- d5[which(d5$DXStat_bl=='Patient'),]

dim(d5CN) #verify that all CN have been captured
dim(d5AD)


#########################################################################################################
##### Call the variables in the order that you want them, consider order of regions in brain map ########
#########################################################################################################

##  The "mainvars" are the areas corresponding to the default mode network
##  The suffix "TA" refers to Thickness Average
##  The names of these variables are preserved as the original ADNI Image Analysis file

mainvars<-c("RID", "ST113TA", ##Begins thickness average
            "ST111TA", 
            "ST103TA",
            "ST109TA", 
            "ST98TA", 
            "ST95TA",
            "ST93TA", 
            "ST73TA", 
            "ST54TA", 
            "ST52TA", 
            "ST44TA", 
            "ST50TA", 
            "ST39TA", 
            "ST36TA", 
            "ST34TA", 
            "ST14TA",
            "ST113TS", ##Begins thickness standard deviation
            "ST111TS",
            "ST103TS",
            "ST109TS",
            "ST98TS",
            "ST95TS",
            "ST93TS",
            "ST73TS",
            "ST54TS",
            "ST52TS",
            "ST44TS",
            "ST50TS",
            "ST39TS",
            "ST36TS",
            "ST34TS",
            "ST14TS")

###################################################################################################################################
##################  Now that "mainvars" and order have been established, here we are changing names of variables to atlas convention  ##########
########################################################################################################################################
#table(d5$DXStat_bl) #reminder of CN vs. Patient count

d5ADmainvars <- d5AD[mainvars] #selecting only the variables corresponding to the "mainvars" list within the AD sample
#dim(d5ADmainvars) #establishing dimensions, number of AD should match table
#colnames(d5ADmainvars)
d5ADmainvars <- d5AD[mainvars] #selecting only the variables that are listed in "mainvars" within the patient subgroup

#adjust data by expressing thickness of interest as a proportion of ICV (i.e. VOI/ICV)
d5ADtest<-((d5ADmainvars[,2:17] )/d5AD$ICV) #works but removes first column, rather than ignore first column in calculation and retaining first column in new set
#recode so as not to lose IDs during matrix division

d5ADtest$RID<-d5ADmainvars$RID #works but adds id to the very end of the dataframe

d5ADmainvars_adjusted <- d5ADtest[colnames(d5ADtest)[c(17,1:16)]] #rearanges columns, placing id first
#head(d5ADmainvars_adjusted)


d5ADmainvars_adjusted_bound<-cbind(d5ADmainvars_adjusted, (subset(d5ADmainvars[,18:33]))) #add back TS (standard deviation of original thickness values)
head(d5ADmainvars_adjusted_bound)
#colnames(d5ADmainvars_adjusted_bound)
#head(d5ADmainvars_adjusted_bound)


#create file of d5ADmainvars_adjusted
#write.csv(d5ADmainvars_adjusted, '/Users/shaunaovergaard/Dropbox (Personal)/2017/Dissertation/Paper1/Data/n306/subsamples/d5ADmainvars_adjusted.csv', row.names=T)
#head(d5ADmainvars_adjusted_bound$RID)

t(d5ADmainvars_adjusted_bound[1, 2:17]) #TA
t(d5ADmainvars_adjusted_bound[1,18:33]) #TS

rownames(t(d5ADmainvars_adjusted_bound[1, 2:17]) )#TA
rownames(t(d5ADmainvars_adjusted_bound[1,18:33])) #TS

